{"version":3,"sources":["node_modules/current-device/es/index.js","script.js"],"names":["device","_typeof","Symbol","iterator","obj","constructor","prototype","previousDevice","window","changeOrientationList","documentElement","document","userAgent","navigator","toLowerCase","television","find","needle","indexOf","hasClass","className","match","RegExp","addClass","currentClassNames","replace","removeClass","handleOrientation","landscape","walkOnChangeOrientationList","setOrientationCache","newOrientation","index","macos","ios","iphone","ipod","ipad","windows","android","androidPhone","androidTablet","blackberry","blackberryPhone","blackberryTablet","windowsPhone","windowsTablet","fxos","fxosPhone","fxosTablet","meego","cordova","location","protocol","nodeWebkit","process","mobile","tablet","desktop","i","length","portrait","screen","orientation","Object","hasOwnProperty","call","type","includes","innerHeight","innerWidth","noConflict","onChangeOrientation","cb","push","orientationEvent","findMatch","arr","addEventListener","attachEvent","os","console","log","querySelector","textContent"],"mappings":"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","file":"script.85972e9d.js","sourceRoot":"..","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// Save the previous value of the device variable.\nvar previousDevice = window.device;\n\nvar device = {};\n\nvar changeOrientationList = [];\n\n// Add device as a global object.\nwindow.device = device;\n\n// The <html> element.\nvar documentElement = window.document.documentElement;\n\n// The client user agent string.\n// Lowercase, so we can use the more efficient indexOf(), instead of Regex\nvar userAgent = window.navigator.userAgent.toLowerCase();\n\n// Detectable television devices.\nvar television = ['googletv', 'viera', 'smarttv', 'internet.tv', 'netcast', 'nettv', 'appletv', 'boxee', 'kylo', 'roku', 'dlnadoc', 'pov_tv', 'hbbtv', 'ce-html'];\n\n// Main functions\n// --------------\n\ndevice.macos = function () {\n  return find('mac');\n};\n\ndevice.ios = function () {\n  return device.iphone() || device.ipod() || device.ipad();\n};\n\ndevice.iphone = function () {\n  return !device.windows() && find('iphone');\n};\n\ndevice.ipod = function () {\n  return find('ipod');\n};\n\ndevice.ipad = function () {\n  return find('ipad');\n};\n\ndevice.android = function () {\n  return !device.windows() && find('android');\n};\n\ndevice.androidPhone = function () {\n  return device.android() && find('mobile');\n};\n\ndevice.androidTablet = function () {\n  return device.android() && !find('mobile');\n};\n\ndevice.blackberry = function () {\n  return find('blackberry') || find('bb10') || find('rim');\n};\n\ndevice.blackberryPhone = function () {\n  return device.blackberry() && !find('tablet');\n};\n\ndevice.blackberryTablet = function () {\n  return device.blackberry() && find('tablet');\n};\n\ndevice.windows = function () {\n  return find('windows');\n};\n\ndevice.windowsPhone = function () {\n  return device.windows() && find('phone');\n};\n\ndevice.windowsTablet = function () {\n  return device.windows() && find('touch') && !device.windowsPhone();\n};\n\ndevice.fxos = function () {\n  return (find('(mobile') || find('(tablet')) && find(' rv:');\n};\n\ndevice.fxosPhone = function () {\n  return device.fxos() && find('mobile');\n};\n\ndevice.fxosTablet = function () {\n  return device.fxos() && find('tablet');\n};\n\ndevice.meego = function () {\n  return find('meego');\n};\n\ndevice.cordova = function () {\n  return window.cordova && location.protocol === 'file:';\n};\n\ndevice.nodeWebkit = function () {\n  return _typeof(window.process) === 'object';\n};\n\ndevice.mobile = function () {\n  return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone() || device.fxosPhone() || device.meego();\n};\n\ndevice.tablet = function () {\n  return device.ipad() || device.androidTablet() || device.blackberryTablet() || device.windowsTablet() || device.fxosTablet();\n};\n\ndevice.desktop = function () {\n  return !device.tablet() && !device.mobile();\n};\n\ndevice.television = function () {\n  var i = 0;\n  while (i < television.length) {\n    if (find(television[i])) {\n      return true;\n    }\n    i++;\n  }\n  return false;\n};\n\ndevice.portrait = function () {\n  if (screen.orientation && Object.prototype.hasOwnProperty.call(window, 'onorientationchange')) {\n    return screen.orientation.type.includes('portrait');\n  }\n  return window.innerHeight / window.innerWidth > 1;\n};\n\ndevice.landscape = function () {\n  if (screen.orientation && Object.prototype.hasOwnProperty.call(window, 'onorientationchange')) {\n    return screen.orientation.type.includes('landscape');\n  }\n  return window.innerHeight / window.innerWidth < 1;\n};\n\n// Public Utility Functions\n// ------------------------\n\n// Run device.js in noConflict mode,\n// returning the device variable to its previous owner.\ndevice.noConflict = function () {\n  window.device = previousDevice;\n  return this;\n};\n\n// Private Utility Functions\n// -------------------------\n\n// Simple UA string search\nfunction find(needle) {\n  return userAgent.indexOf(needle) !== -1;\n}\n\n// Check if documentElement already has a given class.\nfunction hasClass(className) {\n  return documentElement.className.match(new RegExp(className, 'i'));\n}\n\n// Add one or more CSS classes to the <html> element.\nfunction addClass(className) {\n  var currentClassNames = null;\n  if (!hasClass(className)) {\n    currentClassNames = documentElement.className.replace(/^\\s+|\\s+$/g, '');\n    documentElement.className = currentClassNames + ' ' + className;\n  }\n}\n\n// Remove single CSS class from the <html> element.\nfunction removeClass(className) {\n  if (hasClass(className)) {\n    documentElement.className = documentElement.className.replace(' ' + className, '');\n  }\n}\n\n// HTML Element Handling\n// ---------------------\n\n// Insert the appropriate CSS class based on the _user_agent.\n\nif (device.ios()) {\n  if (device.ipad()) {\n    addClass('ios ipad tablet');\n  } else if (device.iphone()) {\n    addClass('ios iphone mobile');\n  } else if (device.ipod()) {\n    addClass('ios ipod mobile');\n  }\n} else if (device.macos()) {\n  addClass('macos desktop');\n} else if (device.android()) {\n  if (device.androidTablet()) {\n    addClass('android tablet');\n  } else {\n    addClass('android mobile');\n  }\n} else if (device.blackberry()) {\n  if (device.blackberryTablet()) {\n    addClass('blackberry tablet');\n  } else {\n    addClass('blackberry mobile');\n  }\n} else if (device.windows()) {\n  if (device.windowsTablet()) {\n    addClass('windows tablet');\n  } else if (device.windowsPhone()) {\n    addClass('windows mobile');\n  } else {\n    addClass('windows desktop');\n  }\n} else if (device.fxos()) {\n  if (device.fxosTablet()) {\n    addClass('fxos tablet');\n  } else {\n    addClass('fxos mobile');\n  }\n} else if (device.meego()) {\n  addClass('meego mobile');\n} else if (device.nodeWebkit()) {\n  addClass('node-webkit');\n} else if (device.television()) {\n  addClass('television');\n} else if (device.desktop()) {\n  addClass('desktop');\n}\n\nif (device.cordova()) {\n  addClass('cordova');\n}\n\n// Orientation Handling\n// --------------------\n\n// Handle device orientation changes.\nfunction handleOrientation() {\n  if (device.landscape()) {\n    removeClass('portrait');\n    addClass('landscape');\n    walkOnChangeOrientationList('landscape');\n  } else {\n    removeClass('landscape');\n    addClass('portrait');\n    walkOnChangeOrientationList('portrait');\n  }\n  setOrientationCache();\n}\n\nfunction walkOnChangeOrientationList(newOrientation) {\n  for (var index in changeOrientationList) {\n    changeOrientationList[index](newOrientation);\n  }\n}\n\ndevice.onChangeOrientation = function (cb) {\n  if (typeof cb == 'function') {\n    changeOrientationList.push(cb);\n  }\n};\n\n// Detect whether device supports orientationchange event,\n// otherwise fall back to the resize event.\nvar orientationEvent = 'resize';\nif (Object.prototype.hasOwnProperty.call(window, 'onorientationchange')) {\n  orientationEvent = 'orientationchange';\n}\n\n// Listen for changes in orientation.\nif (window.addEventListener) {\n  window.addEventListener(orientationEvent, handleOrientation, false);\n} else if (window.attachEvent) {\n  window.attachEvent(orientationEvent, handleOrientation);\n} else {\n  window[orientationEvent] = handleOrientation;\n}\n\nhandleOrientation();\n\n// Public functions to get the current value of type, os, or orientation\n// ---------------------------------------------------------------------\n\nfunction findMatch(arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (device[arr[i]]()) {\n      return arr[i];\n    }\n  }\n  return 'unknown';\n}\n\ndevice.type = findMatch(['mobile', 'tablet', 'desktop']);\ndevice.os = findMatch(['ios', 'iphone', 'ipad', 'ipod', 'android', 'blackberry', 'windows', 'fxos', 'meego', 'television']);\n\nfunction setOrientationCache() {\n  device.orientation = findMatch(['portrait', 'landscape']);\n}\n\nsetOrientationCache();\n\nexport default device;","import device from 'current-device'\r\nconsole.log('device.mobile() === %s', device.mobile());\r\n\r\nconst os = document.querySelector(\"#os\");\r\nconst orientation = document.querySelector(\"#orientation\");\r\nconst type = document.querySelector(\"#type\");\r\n\r\nif (device.windows()) {\r\n    os.textContent = \"Windows\";\r\n}\r\n\r\nif (device.ios()) {\r\n    os.textContent = \"iOS\";\r\n}\r\n\r\nif (device.android()) {\r\n    os.textContent = \"Android\";\r\n}\r\n\r\nif (device.mobile()) {\r\n    type.textContent = \"Mobile\";\r\n};\r\nif (device.tablet()) {\r\n    type.textContent = \"Tablet\";\r\n};\r\nif (device.desktop()) {\r\n    type.textContent = \"Desktop\";\r\n};\r\n\r\nif (device.portrait()) {\r\n    orientation.textContent = \"Portrait\";\r\n};\r\n\r\nif (device.landscape()) {\r\n    orientation.textContent = \"Landscape\";\r\n};\r\n\r\n\r\n// if (device.ipad()) {};\r\n// if (device.ipod()) {};\r\n// if (device.iphone()) {};\r\n// if (device.android()) {};\r\n// if (device.androidTablet()) {};\r\n// if (device.blackberryTablet()) {};\r\n// if (device.fxos()) {};\r\n// if (device.fxosPhone()) {};\r\n// if (device.fxosTablet()) {};\r\n// if (device.meego()) {};\r\n// if (device.television()) {};\r\n\r\ndevice.onChangeOrientation((newOrientation) => {\r\n    console.log(`New orientation is ${newOrientation}`)\r\n})"]}